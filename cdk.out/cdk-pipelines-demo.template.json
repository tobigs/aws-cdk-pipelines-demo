{
 "Resources": {
  "lambdacontainerpipelineEB464C13": {
   "Type": "AWS::ECR::Repository",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/lambda_container_pipeline/Resource"
   }
  },
  "ContainerPipelineArtifactsBucket10240DFE": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/ArtifactsBucket/Resource"
   }
  },
  "ContainerPipelineArtifactsBucketPolicy8D7AFC66": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ContainerPipelineArtifactsBucket10240DFE"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "ContainerPipelineRoleD472C53B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Role/Resource"
   }
  },
  "ContainerPipelineRoleDefaultPolicyD66EB19C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ContainerPipelineCodeBuildActionRole82A3299E",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/cdk-hnb659fds-deploy-role-",
          {
           "Ref": "AWS::AccountId"
          },
          "-",
          {
           "Ref": "AWS::Region"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContainerPipelineRoleDefaultPolicyD66EB19C",
    "Roles": [
     {
      "Ref": "ContainerPipelineRoleD472C53B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "ContainerPipeline3FD96453": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "ContainerPipelineArtifactsBucket10240DFE"
     },
     "Type": "S3"
    },
    "RestartExecutionOnUpdate": true,
    "RoleArn": {
     "Fn::GetAtt": [
      "ContainerPipelineRoleD472C53B",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "tobigs",
         "Repo": "aws-cdk-pipelines-demo",
         "Branch": "main",
         "OAuthToken": {
          "Fn::Join": [
           "",
           [
            "{{resolve:secretsmanager:arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":secretsmanager:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":secret:github-token:SecretString:::}}"
           ]
          ]
         },
         "PollForSourceChanges": false
        },
        "Name": "tobigs_aws-cdk-pipelines-demo",
        "OutputArtifacts": [
         {
          "Name": "tobigs_aws_cdk_pipelines_demo_Source"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "ContainerPipelineBuildSynthCdkBuildProject8247BDF7"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"703282c04c9fc46e15ff350803667e9e4c9e864c90cdc0750fae0d99441568de\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "tobigs_aws_cdk_pipelines_demo_Source"
         }
        ],
        "Name": "Synth",
        "OutputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "ContainerPipelineCodeBuildActionRole82A3299E",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "ContainerPipelineUpdatePipelineSelfMutationE5D853B4"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"e7ba6d76800cf173363c1dce94acd7c7b7b7b494b0785bf517e0498179d73ce7\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "Name": "SelfMutate",
        "RoleArn": {
         "Fn::GetAtt": [
          "ContainerPipelineCodeBuildActionRole82A3299E",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "UpdatePipeline"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06"
         }
        },
        "InputArtifacts": [
         {
          "Name": "tobigs_aws_cdk_pipelines_demo_Source"
         }
        ],
        "Name": "ContainerBuild",
        "RoleArn": {
         "Fn::GetAtt": [
          "ContainerPipelineCodeBuildActionRole82A3299E",
          "Arn"
         ]
        },
        "RunOrder": 1
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Container-CDK-Pipeline-Lambda-Stage1-Demo-Lambda1",
         "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
         "RoleArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":iam::",
            {
             "Ref": "AWS::AccountId"
            },
            ":role/cdk-hnb659fds-cfn-exec-role-",
            {
             "Ref": "AWS::AccountId"
            },
            "-",
            {
             "Ref": "AWS::Region"
            }
           ]
          ]
         },
         "ActionMode": "CHANGE_SET_REPLACE",
         "ChangeSetName": "PipelineChange",
         "TemplatePath": "Synth_Output::assembly-cdk-pipelines-demo-Container-CDK-Pipeline-Lambda-Stage1/cdkpipelinesdemoContainerCDKPipelineLambdaStage1DemoLambda10C299505.template.json"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "Name": "Demo-Lambda1.Prepare",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 2
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Container-CDK-Pipeline-Lambda-Stage1-Demo-Lambda1",
         "ActionMode": "CHANGE_SET_EXECUTE",
         "ChangeSetName": "PipelineChange"
        },
        "Name": "Demo-Lambda1.Deploy",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 3
       }
      ],
      "Name": "Container-CDK-Pipeline-Lambda-Stage1"
     }
    ]
   },
   "DependsOn": [
    "ContainerPipelineRoleDefaultPolicyD66EB19C",
    "ContainerPipelineRoleD472C53B"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Resource"
   }
  },
  "ContainerPipelineSourcetobigsawscdkpipelinesdemoWebhookResource7AE5D3DA": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": {
      "Fn::Join": [
       "",
       [
        "{{resolve:secretsmanager:arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":secretsmanager:",
        {
         "Ref": "AWS::Region"
        },
        ":",
        {
         "Ref": "AWS::AccountId"
        },
        ":secret:github-token:SecretString:::}}"
       ]
      ]
     }
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "RegisterWithThirdParty": true,
    "TargetAction": "tobigs_aws-cdk-pipelines-demo",
    "TargetPipeline": {
     "Ref": "ContainerPipeline3FD96453"
    },
    "TargetPipelineVersion": 1
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Source/tobigs_aws-cdk-pipelines-demo/WebhookResource"
   }
  },
  "ContainerPipelineBuildSynthCdkBuildProjectRole9BCF6C91": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/Resource"
   }
  },
  "ContainerPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy5F7648BD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineBuildSynthCdkBuildProject8247BDF7"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineBuildSynthCdkBuildProject8247BDF7"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "ContainerPipelineBuildSynthCdkBuildProject8247BDF7"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContainerPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy5F7648BD",
    "Roles": [
     {
      "Ref": "ContainerPipelineBuildSynthCdkBuildProjectRole9BCF6C91"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "ContainerPipelineBuildSynthCdkBuildProject8247BDF7": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step cdk-pipelines-demo/Pipeline/Build/Synth",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "env",
       "Type": "PLAINTEXT",
       "Value": "dev"
      }
     ],
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "ContainerPipelineBuildSynthCdkBuildProjectRole9BCF6C91",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"npm install -g aws-cdk && pip install -r requirements.txt\",\n        \"cdk synth\",\n        \"pytest unittests\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Build/Synth/CdkBuildProject/Resource"
   }
  },
  "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuildRoleF5D6A105": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Container-CDK-Pipeline-Lambda-Stage1/ContainerBuild/ContainerBuild/Role/Resource"
   }
  },
  "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuildRoleDefaultPolicy4ED8E416": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ecr:PutImage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "lambdacontainerpipelineEB464C13",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:BatchCheckLayerAvailability",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "lambdacontainerpipelineEB464C13",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:CompleteLayerUpload",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "lambdacontainerpipelineEB464C13",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:InitiateLayerUpload",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "lambdacontainerpipelineEB464C13",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:UploadLayerPart",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "lambdacontainerpipelineEB464C13",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuildRoleDefaultPolicy4ED8E416",
    "Roles": [
     {
      "Ref": "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuildRoleF5D6A105"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Container-CDK-Pipeline-Lambda-Stage1/ContainerBuild/ContainerBuild/Role/DefaultPolicy/Resource"
   }
  },
  "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step cdk-pipelines-demo/Pipeline/Container-CDK-Pipeline-Lambda-Stage1/ContainerBuild",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "IMAGE_TAG",
       "Type": "PLAINTEXT",
       "Value": "latest-b0a98bb8960a"
      },
      {
       "Name": "AWS_ACCOUNT_ID",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "AWS::AccountId"
       }
      },
      {
       "Name": "IMAGE_REPO_NAME",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "lambdacontainerpipelineEB464C13",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "lambdacontainerpipelineEB464C13",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Ref": "lambdacontainerpipelineEB464C13"
          }
         ]
        ]
       }
      }
     ],
     "Image": "aws/codebuild/standard:4.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuildRoleF5D6A105",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"python\": 3.8,\n        \"docker\": 19\n      }\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"echo Logging in to Amazon ECR...\",\n        \"echo $AWS_DEFAULT_REGION\",\n        \"echo $AWS_ACCOUNT_ID\",\n        \"aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"echo Building image...\",\n        \"echo $IMAGE_REPO_NAME\",\n        \"echo $IMAGE_TAG\",\n        \"docker build --no-cache -t $IMAGE_REPO_NAME:$IMAGE_TAG .\",\n        \"docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_REPO_NAME:$IMAGE_TAG\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"echo Pushing the Docker images...\",\n        \"docker push $IMAGE_REPO_NAME:$IMAGE_TAG\",\n        \"echo Build completed\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/Pipeline/Container-CDK-Pipeline-Lambda-Stage1/ContainerBuild/ContainerBuild/Resource"
   }
  },
  "ContainerPipelineCodeBuildActionRole82A3299E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "ContainerPipelineRoleD472C53B",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/CodeBuildActionRole/Resource"
   }
  },
  "ContainerPipelineCodeBuildActionRoleDefaultPolicy219881F1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ContainerPipelineBuildSynthCdkBuildProject8247BDF7",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ContainerPipelineUpdatePipelineSelfMutationE5D853B4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ContainerPipelineContainerCDKPipelineLambdaStage1ContainerBuild46A9ED06",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContainerPipelineCodeBuildActionRoleDefaultPolicy219881F1",
    "Roles": [
     {
      "Ref": "ContainerPipelineCodeBuildActionRole82A3299E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/CodeBuildActionRole/DefaultPolicy/Resource"
   }
  },
  "ContainerPipelineUpdatePipelineSelfMutationRole2A39240B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/UpdatePipeline/SelfMutation/Role/Resource"
   }
  },
  "ContainerPipelineUpdatePipelineSelfMutationRoleDefaultPolicy1BA41250": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineUpdatePipelineSelfMutationE5D853B4"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "ContainerPipelineUpdatePipelineSelfMutationE5D853B4"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "ContainerPipelineUpdatePipelineSelfMutationE5D853B4"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "ForAnyValue:StringEquals": {
         "iam:ResourceTag/aws-cdk:bootstrap-role": [
          "image-publishing",
          "file-publishing",
          "deploy"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:*:iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/*"
         ]
        ]
       }
      },
      {
       "Action": "cloudformation:DescribeStacks",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ContainerPipelineArtifactsBucket10240DFE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ContainerPipelineArtifactsBucket10240DFE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContainerPipelineUpdatePipelineSelfMutationRoleDefaultPolicy1BA41250",
    "Roles": [
     {
      "Ref": "ContainerPipelineUpdatePipelineSelfMutationRole2A39240B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource"
   }
  },
  "ContainerPipelineUpdatePipelineSelfMutationE5D853B4": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step cdk-pipelines-demo/Pipeline/UpdatePipeline/SelfMutate",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "ContainerPipelineUpdatePipelineSelfMutationRole2A39240B",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy cdk-pipelines-demo --require-approval=never --verbose\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/Container_Pipeline/UpdatePipeline/SelfMutation/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OzQ6CMBCEn8V7WYPEg1d5AAkePBooa1ypXdKfGNL03eVXPM03k8nuHOB0hHRXfWwimzZRVEO4ukq2YojuAaWBUGLHlhybXuQPvbkoJDfYUYeKNEIoFhpb/3zD+sncRmEzCGcvW3RjvNAsBSuS/RbPPgqq3sMAVtOhSbfm2hlX1J5Us00oDL9QTm8WjHE0F+8670SJlr2RKNbxFvLhyP/oX2XgnHVDjlhHUfTuyXqfQZpCtntZosR47eiNUM76Bf5KSj9SAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-pipelines-demo/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ecrreponame": {
   "Value": {
    "Ref": "lambdacontainerpipelineEB464C13"
   },
   "Export": {
    "Name": "ecr-repo-name"
   }
  },
  "ecrrepouri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "lambdacontainerpipelineEB464C13",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "lambdacontainerpipelineEB464C13",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "lambdacontainerpipelineEB464C13"
      }
     ]
    ]
   },
   "Export": {
    "Name": "ecr-repo-uri"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}